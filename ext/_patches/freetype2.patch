diff -rPu5 freetype2.orig\include\config\ftstdlib.h freetype2\include\config\ftstdlib.h
--- freetype2.orig\include\config\ftstdlib.h	Sun Apr 20 20:18:50 2014
+++ freetype2\include\config\ftstdlib.h	Fri Dec 12 21:46:18 2014
@@ -106,10 +106,16 @@
 #define ft_fread    fread
 #define ft_fseek    fseek
 #define ft_ftell    ftell
 #define ft_sprintf  sprintf
 
+/* cf. http://lists.gnu.org/archive/html/freetype/2006-09/msg00036.html */
+#ifdef _WIN32
+#undef ft_fopen
+#define ft_fopen    ft_fopen_win32
+#endif
+
 
   /**********************************************************************/
   /*                                                                    */
   /*                             sorting                                */
   /*                                                                    */
diff -rPu5 freetype2.orig\include\ftsystem.h freetype2\include\ftsystem.h
--- freetype2.orig\include\ftsystem.h	Tue Dec 02 14:11:56 2014
+++ freetype2\include\ftsystem.h	Fri Dec 12 21:46:51 2014
@@ -336,10 +336,16 @@
   } FT_StreamRec;
 
   /* */
 
 
+/* cf. http://lists.gnu.org/archive/html/freetype/2006-09/msg00036.html */
+#ifdef _WIN32
+FT_FILE* ft_fopen_win32(const char *fname, const char *mode);
+#endif
+
+
 FT_END_HEADER
 
 #endif /* __FTSYSTEM_H__ */
 
 
diff -rPu5 freetype2.orig\src\base\ftsystem.c freetype2\src\base\ftsystem.c
--- freetype2.orig\src\base\ftsystem.c	Wed May 29 01:00:04 2013
+++ freetype2\src\base\ftsystem.c	Fri Dec 12 21:47:09 2014
@@ -315,6 +315,29 @@
 #endif
     ft_sfree( memory );
   }
 
 
+/* cf. http://lists.gnu.org/archive/html/freetype/2006-09/msg00036.html */
+#ifdef _WIN32
+#include <windows.h>
+
+  FT_FILE* ft_fopen_win32(const char *fname, const char *mode)
+  {
+    // First try fopen, assuming nothing about character encodings.
+    FT_FILE *file = fopen(fname, mode);
+    if (!file)
+    {
+      // fopen failed. Assume the filename is UTF-8, convert to UTF-16, and try _wfopen.
+      WCHAR fnameW[MAX_PATH], modeW[8];
+      if (MultiByteToWideChar(CP_UTF8, 0, fname, -1, fnameW, _countof(fnameW)) &&
+          MultiByteToWideChar(CP_UTF8, 0, mode, -1, modeW, _countof(modeW)))
+      {
+        file = _wfopen(fnameW, modeW);
+      }
+    }
+    return file;
+  }
+#endif
+
+
 /* END */
diff -rPu5 freetype2.orig\src\sfnt\sfobjs.c freetype2\src\sfnt\sfobjs.c
--- freetype2.orig\src\sfnt\sfobjs.c	Wed Nov 19 23:42:04 2014
+++ freetype2\src\sfnt\sfobjs.c	Fri Dec 12 21:48:27 2014
@@ -1077,10 +1077,14 @@
                  get_glyph_metrics                                 )
           {
             face->horizontal.number_Of_HMetrics = 0;
             error                               = FT_Err_Ok;
           }
+#else /* cf. https://code.google.com/p/sumatrapdf/issues/detail?id=2778 */
+          FT_ERROR(("sfnt_load_face: horizontal metrics (hmtx) table missing\n"));
+          face->horizontal.number_Of_HMetrics = 0;
+          error                               = FT_Err_Ok;
 #endif
         }
       }
       else if ( FT_ERR_EQ( error, Table_Missing ) )
       {
